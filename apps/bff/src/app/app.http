@Atoken={{login.response.body.accessToken}}
@Rtoken={{login.response.body.refreshToken}}
# @name login
# Login user by email and password
POST http://localhost:4000/api/users/login HTTP/1.1
Content-Type: application/json

{
  "email": "test@test.local",
  "password": "123456"
}

###

# Get new JWT pair
POST http://localhost:4000/api/users/refresh HTTP/1.1
Authorization: Bearer {{Rtoken}}

###

# Get user by ID
GET http://localhost:4000/api/users/list/friends/658692926888cdda63033c02 HTTP/1.1
Authorization: Bearer {{Atoken}}

###

# Get user list
POST http://localhost:4000/api/users/user-list HTTP/1.1
Authorization: Bearer {{Atoken}}
Content-Type: application/json

{
  "limit": 6,
  "page": 1,
  "level": "pro",
  "location": "Пионерская,Петроградская",
  "typeOfTrain": "yoga",
  "sortDirection": "desc"
}

###

# Get user friends list
GET http://localhost:4000/api/users/list/friends HTTP/1.1
Authorization: Bearer {{Atoken}}

###

# Update user information 
PATCH http://localhost:4000/api/users/update HTTP/1.1
Authorization: Bearer {{Atoken}}
Content-Type: application/json

{
  "name": "Test Name",
  "description": "Колдовство, предательство и необыкновенный мир фэнтези.",
  "caloriesToReset": 3000,
  "trainingReady": true
}

###

# Follow user
PATCH http://localhost:4000/api/users/list/friends/follow/658692926888cdda63033c02 HTTP/1.1
Authorization: Bearer {{Atoken}}

###

# Unfollow user
PATCH http://localhost:4000/api/users/list/friends/unfollow/658692926888cdda63033c02 HTTP/1.1
Authorization: Bearer {{Atoken}}

###

# Add user to friends
PATCH http://localhost:4000/api/users/friends/add/652ffdf03cb7412c4cd5994a HTTP/1.1
Authorization: Bearer {{Atoken}}

###

# Remove user to friends
PATCH http://localhost:4000/api/users/friends/remove/652ffdf03cb7412c4cd5994a HTTP/1.1
Authorization: Bearer {{Atoken}}

###

# Create workout
POST http://localhost:4000/api/workouts/add HTTP/1.1
Authorization: Bearer {{Atoken}}
Content-Type: application/json

{
  "name": "Yoga 3",
  "background": "/img/content/training-1",
  "level": "beginner",
  "type": "yoga",
  "timeOfTraining": "30-50",
  "price": 1500,
  "caloriesToSpend": 1500,
  "description": "Yoga for beginners",
  "gender": "indifferent",
  "video": "/img/content/training-video/video-thumbnail",
  "special": false
}

###

# Update workout by ID
PATCH http://localhost:4000/api/workouts/list/coach/3 HTTP/1.1
Authorization: Bearer {{Atoken}}
Content-Type: application/json

{
  "name": "Yoga for all",
  "timeOfTraining": "50-80"
}

###

# Get workout by ID
GET http://localhost:4000/api/workouts/list/coach/3 HTTP/1.1
Authorization: Bearer {{Atoken}}

###

# Get all workouts and filtres
POST http://localhost:4000/api/workouts/list HTTP/1.1
Authorization: Bearer {{Atoken}}
Content-Type: application/json

{
  "limit": 6,
  "page": 1,
  "sortBy": "createdDate",
  "caloriesToSpend": "0,1500",
  "price": "0,1500",
  "type": "yoga,running",
  "rating": "0,5",
  "timeOfTraining": "10-30,30-50,80-100",
  "sortDirection": "asc"
}
###

# Get count workouts
POST http://localhost:4000/api/workouts/list/count HTTP/1.1
Authorization: Bearer {{Atoken}}
Content-Type: application/json

{
  "limit": 6,
  "page": 1,
  "sortBy": "createdDate",
  "caloriesToSpend": "0,1500",
  "price": "0,1500",
  "type": "yoga,running",
  "rating": "0,5",
  "timeOfTraining": "10-30,30-50,80-100",
  "sortDirection": "asc"
}
###

# Get all workouts
GET http://localhost:4000/api/workouts/list/coach HTTP/1.1
Authorization: Bearer {{Atoken}}

###

# Delete workout
DELETE  http://localhost:4000/api/workouts/list/coach/6 HTTP/1.1
Authorization: Bearer {{Atoken}}

###

# Create order
POST  http://localhost:4000/api/orders/add HTTP/1.1
Authorization: Bearer {{Atoken}}
Content-Type: application/json

{
  "workoutId": 3,
  "orderType": "subscription",
  "count": 4,
  "paymentMethod": "mir"
}

###

# Get orders by workout ID
POST  http://localhost:4000/api/orders/list/3 HTTP/1.1
Authorization: Bearer {{Atoken}}
Content-Type: application/json

{
  "limit": 6,
  "page": 1,
  "sortBy": "count",
  "sortDirection": "asc"
}

###

# Get order by ID
GET  http://localhost:4000/api/orders/1 HTTP/1.1
Authorization: Bearer {{Atoken}}

###

# Get orders by coachID
POST  http://localhost:4000/api/orders/coach/list/index HTTP/1.1
Authorization: Bearer {{Atoken}}
Content-Type: application/json

{
  "limit": 6,
  "page": 1
}

###

# Create feedback
POST http://localhost:4000/api/feedbacks/add HTTP/1.1
Authorization: Bearer {{Atoken}}
Content-Type: application/json

{
  "workoutId": 3,
  "rating": 5,
  "text": "Мне понравилось, тренер просто лапушка. Подходил, помогал, объяснял асаны. У нее теплые руки. Мне понравилось, тренер просто лапушка. Подходил, помогал, объяснял асаны. У нее теплые руки"
}

###

# Get feedbacks by workout ID
POST http://localhost:4000/api/feedbacks/list/3 HTTP/1.1
Authorization: Bearer {{Atoken}}
Content-Type: application/json

{
  "limit": 6,
  "page": 1
}

###

# Get feedback by ID
GET http://localhost:4000/api/feedbacks/1 HTTP/1.1
Authorization: Bearer {{Atoken}}

###

# Create request
POST http://localhost:4000/api/requests/add HTTP/1.1
Authorization: Bearer {{Atoken}}
Content-Type: application/json

{
  "userId": "6530088c4c247c402951848f"
}
###

# Update request by ID
PATCH http://localhost:4000/api/requests/1 HTTP/1.1
Authorization: Bearer {{Atoken}}
Content-Type: application/json

{
  "status": "accept"
}

###

# Get request by ID
GET http://localhost:4000/api/requests/1 HTTP/1.1
Authorization: Bearer {{Atoken}}

###

# Get inputs requests
GET http://localhost:4000/api/requests/list/input HTTP/1.1
Authorization: Bearer {{Atoken}}

###

# Get my requests
GET http://localhost:4000/api/requests/list/requester HTTP/1.1
Authorization: Bearer {{Atoken}}

###

# Delete request
DELETE  http://localhost:4000/api/requests/3 HTTP/1.1
Authorization: Bearer {{Atoken}}

###

# Get notification by ID
GET http://localhost:4000/api/notifications/list/9 HTTP/1.1
Authorization: Bearer {{Atoken}}

###

# Get inputs notifications
GET http://localhost:4000/api/notifications/list HTTP/1.1
Authorization: Bearer {{Atoken}}

###

# Delete notification
DELETE  http://localhost:4000/api/notifications/1 HTTP/1.1
Authorization: Bearer {{Atoken}}

###

# Update balance by ID
PATCH http://localhost:4000/api/balances/update HTTP/1.1
Authorization: Bearer {{Atoken}}
Content-Type: application/json

{
  "balanceId": 1,
  "count": 4
}

###

# Get balance by ID
GET http://localhost:4000/api/balances/list/1 HTTP/1.1
Authorization: Bearer {{Atoken}}

###

# Get list of balances
GET http://localhost:4000/api/balances/list HTTP/1.1
Authorization: Bearer {{Atoken}}

###

# Delete balance
DELETE  http://localhost:4000/api/balances/list/1 HTTP/1.1
Authorization: Bearer {{Atoken}}